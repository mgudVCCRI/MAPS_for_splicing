calculate_maps = "calculate_maps.R"
join_groups = "join_groups.R"
plot_multimodel_maps = "plot_multimodel_maps.R"
viz_scores = "viz_scores.R"

if config["gcp"] == False:
    # SpliceAI scores
    vars_by_spliceai_bins_genomes = "../files/genomes_spliceai_bins.tsv"
    # mmSplice scores
    mmSplice_scores = "../files/mmsplice_bins.tsv"
    # Aggregate scores
    aggregate_scores = "../files/spliceai_aggregate_bins.tsv"
    # Variants of interest annotated with splicing scores (one or many)
    splicing_groups = "../files/SpliceSM_bins.tsv"
    # Mutability table
    mutation_ht = "../files/mutation_ht.tsv"
    # Synonymous variants for calibration of MAPS
    synonymous_by_mu = "../files/syn_vars_coding_by_mu.tsv"
else:
    from snakemake.remote.GS import RemoteProvider

    GS = RemoteProvider()
    # SpliceAI scores
    vars_by_spliceai_bins_genomes = GS.remote(
        config["gcp_rootdir"] + "genomes_spliceai_bins.tsv"
    )
    # mmSplice scores
    mmSplice_scores = GS.remote(config["gcp_rootdir"] + "mmsplice_bins.tsv")
    # Aggregate scores
    aggregate_scores = GS.remote(config["gcp_rootdir"] + "spliceai_aggregate_bins.tsv")
    # Variants of interest annotated with splicing scores (one or many)
    splicing_groups = GS.remote(config["gcp_rootdir"] + "SpliceSM_bins.tsv")
    # Mutability table
    mutation_ht = GS.remote(config["gcp_rootdir"] + "mutation_ht.tsv")
    # Synonymous variants for calibration of MAPS
    synonymous_by_mu = GS.remote(config["gcp_rootdir"] + "syn_vars_coding_by_mu.tsv")

# TODO: encode 'extra = "..._bin"' with "fmt"
# TODO: make label recoding more robust (extra_old and extra_new depends on quantiles)

###############################################################################
#                                   Genomes                                   #
###############################################################################

# Output files ################################################################

maps_genomes_spliceai_tops_plot = "maps_genomes_spliceai_tops.pdf"

###############################################################################
#                                    Exomes                                   #
###############################################################################

fmt = "bin"

# "Top N%" groups for each score
splicesm_joined_groups = "splicesm_joined_groups.tsv"
spliceai_max_joined_groups = "spliceai_max_joined_groups.tsv"
spliceai_xgb_joined_groups = "spliceai_xgb_joined_groups.tsv"
spliceai_aggregate_joined_groups = "spliceai_aggregate_joined_groups.tsv"
mmSplice_joined_groups = "mmSplice_joined_groups.tsv"

# Output files ################################################################
maps_mmSplice_df = "maps_mmSplice.tsv"
maps_splicesm_df = "maps_splicesm.tsv"
maps_spliceai_xgb_df = "maps_spliceai_xgb.tsv"
maps_spliceai_max_df = "maps_spliceai_max.tsv"
maps_spliceai_aggregate_df = "maps_spliceai_aggregate.tsv"
maps_all_models_plot = "maps_all_models.pdf"

###############################################################################


rule all:
    input:
        # maps_genomes_spliceai_tops_plot,
        # "maps_splicesm_by_spliceSM_" + fmt + ".pdf",
        # "maps_spliceAI_max_by_spliceAI_max_" + fmt + ".pdf",
        # "maps_spliceAI_xgb_by_spliceAI_xgb_" + fmt + ".pdf",
        # "traps_splicesm_by_spliceSM_" + fmt + ".pdf",
        # "traps_spliceAI_max_by_spliceAI_max_" + fmt + ".pdf",
        # "traps_spliceAI_xgb_by_spliceAI_xgb_" + fmt + ".pdf",
        # "maps_mmSplice_by_mmSplice_" + fmt + ".pdf",
        maps_all_models_plot,
        maps_splicesm_df,
        maps_spliceai_xgb_df,
        maps_spliceai_max_df,
        "maps_mmSplice_tops_by_mmSplice_" + fmt + ".pdf",
        "maps_splicesm_tops_by_spliceSM_" + fmt + ".pdf",
        "maps_spliceAI_max_tops_by_spliceAI_max_" + fmt + ".pdf",
        "maps_spliceAI_xgb_tops_by_spliceAI_xgb_" + fmt + ".pdf",
        "traps_splicesm_tops_by_spliceSM_" + fmt + ".pdf",
        "traps_spliceAI_max_tops_by_spliceAI_max_" + fmt + ".pdf",
        "traps_spliceAI_xgb_tops_by_spliceAI_xgb_" + fmt + ".pdf",


###############################################################################
#                                    Exomes                                   #
###############################################################################


rule mmSplice_df:
    input:
        variants=mmSplice_joined_groups,
        calibrate_on=synonymous_by_mu,
    params:
        extra="mmSplice_bin",
        transformation="+",
    output:
        scores=maps_mmSplice_df,
    script:
        calculate_maps


rule spliceAI_max_df:
    input:
        variants=spliceai_max_joined_groups,
        calibrate_on=synonymous_by_mu,
    params:
        extra="spliceAI_max_bin",
        transformation="+",
    output:
        scores=maps_spliceai_max_df,
    script:
        calculate_maps


rule spliceAI_xgb_df:
    input:
        variants=spliceai_xgb_joined_groups,
        calibrate_on=synonymous_by_mu,
    params:
        extra="spliceAI_xgb_bin",
        transformation="+",
    output:
        scores=maps_spliceai_xgb_df,
    script:
        # TODO: add
        # extra_old = c(1, 2, 3, 4, 5, 6, 7, 9),
        # extra_new = c("100%", "25%", "12.5%", "6.25%", "3.125%", "1.56%", "0.8%", "0.4%"),
        calculate_maps


rule spliceai_aggregate_df:
    input:
        variants=spliceai_aggregate_joined_groups,
        calibrate_on=synonymous_by_mu,
    params:
        extra="spliceai_aggregate_bin",
        transformation="+",
    output:
        scores=maps_spliceai_aggregate_df,
    script:
        # TODO: add
        # extra_old = c(1, 2, 3, 4, 5, 6, 7, 9),
        # extra_new = c("100%", "25%", "12.5%", "6.25%", "3.125%", "1.56%", "0.8%", "0.4%"),
        calculate_maps


rule spliceSM_df:
    input:
        variants=splicesm_joined_groups,
        calibrate_on=synonymous_by_mu,
    params:
        extra="spliceSM_bin",
        transformation="+",
    output:
        scores=maps_splicesm_df,
    script:
        # TODO: add
        # extra_old = c(0, 1, 2, 3, 4, 9),
        # extra_new = c("100%", "50%", "25%", "12.5%", "6.25%", "3.125%"),
        calculate_maps


############################################


# TODO: there are bugs here!
rule all_models_plot:
    input:
        maps_dataframes=[
            maps_spliceai_aggregate_df,
            maps_spliceai_xgb_df,
            maps_spliceai_max_df,
            maps_splicesm_df,
            maps_mmSplice_df,
        ],
    output:
        plot=maps_all_models_plot,
    params:
        # groups=["100%", "25%", "12.5%", "6.25%", "3.125%", "1.56%", "0.8%", "0.4%"],
        groups=[1, 2, 3, 4, 5, 6, 7, 8, 9],
        legend_title="",
        model_labels=["spliceSM_bin", "spliceAI_xgb_bin", "spliceAI_max_bin"],
        new_model_labels=["SM", "XGB", "MAX"],
        # model_labels=[
        #     "spliceSM_bin",
        #     "spliceAI_max_bin",
        #     "spliceAI_xgb_bin",
        #     "spliceai_aggregate_bin",
        #     "mmSplice_bin",
        # ],
        # new_model_labels=["SM", "MAX", "XGB", "AGG", "mmSplice"],
        # TODO: from gs://gcp-public-data--gnomad/papers/2019-flagship-lof/v1.0/summary_results/maps_plain_exomes.txt.bgz
        missense_level=0.044,
        # TODO: from gs://gcp-public-data--gnomad/papers/2019-flagship-lof/v1.0/summary_results/maps_plain_exomes.txt.bgz
        splicing_level=0.133,
        # TODO: from gs://gcp-public-data--gnomad/papers/2019-flagship-lof/v1.0/summary_results/maps_plain_exomes.txt.bgz
        nonsense_level=0.149,
        title="",
        separated=True,
        ylab="MAPS",
        xlab="Top group",
        xlab_angle=45,
        xlab_vjust=1,
        xlab_hjust=1,
    script:
        plot_multimodel_maps


############################################


rule mmSplice_preprocessing:
    input:
        groups=mmSplice_scores,
    output:
        joined_groups=mmSplice_joined_groups,
    params:
        variable="mmSplice_" + fmt,
    script:
        join_groups


rule spliceai_aggregate_preprocessing:
    input:
        groups=aggregate_scores,
    output:
        joined_groups=spliceai_aggregate_joined_groups,
    params:
        variable="spliceai_aggregate_" + fmt,
    script:
        join_groups


# Converts bins into "Top N%" groups
rule splicesm_preprocessing:
    input:
        groups=splicing_groups,
    output:
        joined_groups=splicesm_joined_groups,
    params:
        variable="spliceSM_" + fmt,
    script:
        join_groups


# Converts bins into "Top N%" groups
rule spliceai_max_preprocessing:
    input:
        groups=splicing_groups,
    output:
        joined_groups=spliceai_max_joined_groups,
    params:
        variable="spliceAI_max_" + fmt,
    script:
        join_groups


# Converts bins into "Top N%" groups
rule spliceai_xgb_preprocessing:
    input:
        groups=splicing_groups,
    output:
        joined_groups=spliceai_xgb_joined_groups,
    params:
        variable="spliceAI_xgb_" + fmt,
    script:
        join_groups


############################################


# TODO: do you need this at all?
rule misc_files:
    output:
        mutation_ht,
    run:
        import hail as hl

        mutation_ht = hl.read_table(config["mutation_rate_ht_path"])
        mutation_ht.export(output[0])


############################################


rule mmSplice_qplot_tops:
    input:
        scores=maps_mmSplice_df,
    output:
        plot="maps_mmSplice_tops_by_mmSplice_bin.pdf",
    params:
        xlab="mmSplice top group",
        xlab_labels=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9],
        new_xlab_labels=[
            "100%",
            "50%",
            "75%",
            "87.5%",
            "93.8%",
            "96.9%",
            "98.4%",
            "99.2%",
            "99.6%",
            "99.8%",
        ],
        xlab_angle=45,
        xlab_vjust=1,
        xlab_hjust=1,
        reorder_xlab_by_score=False,
        score_name="maps",
        lconf="maps_lconf",
        uconf="maps_uconf",
    script:
        viz_scores


############################################


rule spliceAI_max_qplot_tops:
    input:
        scores=maps_spliceai_max_df,
    output:
        plot="maps_spliceAI_max_tops_by_spliceAI_max_bin.pdf",
    params:
        xlab="SpliceAI MAX top group",
        xlab_labels=[1, 2, 3, 4, 5, 6, 7, 8, 9],
        new_xlab_labels=[
            "100%",
            "25%",
            "12.5%",
            "6.25%",
            "3.125%",
            "1.56%",
            "0.8%",
            "0.4%",
            "0.2%",
        ],
        xlab_angle=45,
        xlab_vjust=1,
        xlab_hjust=1,
        reorder_xlab_by_score=False,
        score_name="maps",
        lconf="maps_lconf",
        uconf="maps_uconf",
    script:
        viz_scores


rule spliceAI_xgb_qplot_tops:
    input:
        scores=maps_spliceai_xgb_df,
    output:
        plot="maps_spliceAI_xgb_tops_by_spliceAI_xgb_bin.pdf",
    params:
        xlab="SpliceAI XGB top group",
        xlab_labels=[1, 2, 3, 4, 5, 6, 7, 9],
        new_xlab_labels=[
            "100%",
            "25%",
            "12.5%",
            "6.25%",
            "3.125%",
            "1.56%",
            "0.8%",
            "0.4%",
        ],
        xlab_angle=45,
        xlab_vjust=1,
        xlab_hjust=1,
        reorder_xlab_by_score=False,
        score_name="maps",
        lconf="maps_lconf",
        uconf="maps_uconf",
    script:
        viz_scores


rule spliceSM_qplot_tops:
    input:
        scores=maps_splicesm_df,
    output:
        plot="maps_splicesm_tops_by_spliceSM_bin.pdf",
    params:
        xlab="SpliceSM top group",
        xlab_labels=[0, 1, 2, 3, 4, 9],
        new_xlab_labels=["100%", "50%", "25%", "12.5%", "6.25%", "3.125%"],
        xlab_angle=45,
        xlab_vjust=1,
        xlab_hjust=1,
        reorder_xlab_by_score=False,
        score_name="maps",
        lconf="maps_lconf",
        uconf="maps_uconf",
    script:
        viz_scores


############################################


rule spliceAI_max_qplot_traps_tops:
    input:
        scores=maps_spliceai_max_df,
    output:
        plot="traps_spliceAI_max_tops_by_spliceAI_max_bin.pdf",
    params:
        xlab="SpliceAI MAX top group",
        xlab_labels=[1, 2, 3, 4, 5, 6, 7, 8, 9],
        new_xlab_labels=[
            "100%",
            "25%",
            "12.5%",
            "6.25%",
            "3.125%",
            "1.56%",
            "0.8%",
            "0.4%",
            "0.2%",
        ],
        xlab_angle=45,
        xlab_vjust=1,
        xlab_hjust=1,
        reorder_xlab_by_score=False,
        score_name="maps",
        lconf="maps_lconf",
        uconf="maps_uconf",
    script:
        viz_scores


rule spliceAI_xgb_qplot_traps_tops:
    input:
        scores=maps_spliceai_xgb_df,
    output:
        plot="traps_spliceAI_xgb_tops_by_spliceAI_xgb_bin.pdf",
    params:
        xlab="SpliceAI XGB top group",
        xlab_labels=[1, 2, 3, 4, 5, 6, 7, 9],
        new_xlab_labels=[
            "100%",
            "25%",
            "12.5%",
            "6.25%",
            "3.125%",
            "1.56%",
            "0.8%",
            "0.4%",
        ],
        xlab_angle=45,
        xlab_vjust=1,
        xlab_hjust=1,
        reorder_xlab_by_score=False,
        score_name="maps",
        lconf="maps_lconf",
        uconf="maps_uconf",
    script:
        viz_scores


rule spliceSM_qplot_traps_tops:
    input:
        scores=maps_splicesm_df,
    output:
        plot="traps_splicesm_tops_by_spliceSM_bin.pdf",
    params:
        xlab="SpliceSM top group",
        xlab_labels=[0, 1, 2, 3, 4, 9],
        new_xlab_labels=["100%", "50%", "25%", "12.5%", "6.25%", "3.125%"],
        xlab_angle=45,
        xlab_vjust=1,
        xlab_hjust=1,
        reorder_xlab_by_score=False,
        score_name="maps",
        lconf="maps_lconf",
        uconf="maps_uconf",
    script:
        viz_scores


###############################################################################
#                                   Genomes                                   #
###############################################################################
# # TODO: finish
# rule maps_genomes_spliceai_tops_plot:
#     input:
#         scores = vars_by_spliceai_bins_genomes_df
#     output:
#         plot=maps_genomes_spliceai_tops_plot,
#     script:
#         viz_scores
#
